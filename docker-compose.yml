version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
      POSTGRES_DB: crm_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U crm_user']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=crm_user
      - POSTGRES_PASSWORD=crm_password
      - POSTGRES_DB=crm_db
      - SECRET_KEY=dev-secret-key-change-in-production-use-openssl-rand-hex-32
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost:5173"]
      - FIRST_SUPERUSER_EMAIL=admin@example.com
      - FIRST_SUPERUSER_PASSWORD=admin123
      - FIRST_SUPERUSER_NOMBRES=Admin
      - FIRST_SUPERUSER_APELLIDOS=Sistema
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/app:/app/app
      - ./backend/tests:/app/tests
    command: sh -c "alembic upgrade head && python -m app.initial_data && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:8000/api
    ports:
      - '3000:80'
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000/api

volumes:
  postgres_data:
